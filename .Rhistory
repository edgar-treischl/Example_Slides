pwrt5$power, pwrt5$n))
}
#Combine data and name it
ptab <- cbind(seq_len(nrow(ptab)), ptab)
colnames(ptab) <- c("id","r = 0,1.power","r = 0,1.n",
"r = 0,2.power","r = 0,2.n",
"r = 0,3.power","r = 0,3.n",
"r = 0,5.power","r = 0,5.n",
"r = 0,7.power","r = 0,7.n")
# get data into right format for ggplot2
temp <- ptab %>%
as.data.frame() %>%
gather(key = name, value = val, 2:11) %>%
separate(col = name, into = c("group", "var"), sep = "\\.") %>%
spread(key = var, value = val)
# factor group
temp$group <- factor(temp$group,
levels = c("r = 0,1", "r = 0,2",
"r = 0,3", "r = 0,5",
"r = 0,7"))
#Color Scheme
cbPalette <- c("#C69472", "#8A8FA1", "#29303B", "#0057AD", "#C70C0B")
# Plot it
p1<- ggplot(temp, aes(x = `n`, y = power , color = group, linetype = group))+
geom_hline(yintercept = 0.80, linetype = 1, color="darkgray", size=1.2)+
geom_line(size=1) +
theme_minimal() +
#theme_cowplot()+
geom_label(data = temp %>% filter(`n` == 50),
aes(label = group, fill=group),
#hjust = -1.0,
#vjust = 1.5,
size = 4,
color="white")+
ylab("Power")+
xlab("N")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12),
legend.text=element_text(size=12))+
scale_color_manual(values=cbPalette)+
scale_fill_manual(values = cbPalette)+
theme(legend.position="none",
#legend.direction="horizontal",
legend.title = element_blank())
p1
library(pwr) # for power calcs
pwr.t.test(d=0.5,
sig.level=0.05,
power=NULL,
n=i,
type = "two.sample",
alternative = "two.sided")
library(pwr) # for power calcs
library(tidyr) # for data manipulation
library(ggrepel)
library(ggplot2)
library(cowplot)
library(tidyverse)
ptab <- cbind(NULL, NULL)
for (i in seq(2,500)){
pwrt1 <-  pwr.t.test(d=0.1, sig.level=0.05, power=NULL, n=i,
type = "two.sample", alternative = "two.sided")
pwrt2 <- pwr.t.test(d=0.2, sig.level=0.05, power=NULL, n=i,
type = "two.sample", alternative = "two.sided")
pwrt3 <- pwr.t.test(d=0.3, sig.level=0.05, power=NULL, n=i,
type = "two.sample", alternative = "two.sided")
pwrt4 <- pwr.t.test(d=0.5, sig.level=0.05, power=NULL, n=i,
type = "two.sample", alternative = "two.sided")
pwrt5 <- pwr.t.test(d=0.7, sig.level=0.05, power=NULL, n=i,
type = "two.sample", alternative = "two.sided")
ptab <- rbind(ptab, cbind(pwrt1$power, pwrt1$n,
pwrt2$power, pwrt2$n,
pwrt3$power, pwrt3$n,
pwrt4$power, pwrt4$n,
pwrt5$power, pwrt5$n))
}
nd name it
ptab <- cbind(seq_len(nrow(ptab)), ptab)
colnames(ptab) <- c("id","d = 0,1.power","d = 0,1.n",
"d = 0,2.power","d = 0,2.n",
"d = 0,3.power","d = 0,3.n",
"d = 0,5.power","d = 0,5.n",
"d = 0,7.power","d = 0,7.n")
# get data into right format for ggplot2
temp <- ptab %>%
as.data.frame() %>%
gather(key = name, value = val, 2:11) %>%
separate(col = name, into = c("group", "var"), sep = "\\.") %>%
spread(key = var, value = val)
# factor group
temp$group <- factor(temp$group,
levels = c("d = 0,1", "d = 0,2",
"d = 0,3", "d = 0,5",
"d = 0,7"))
#Color Scheme
cbPalette <- c("#bdbdbd","#969696","#737373", "#525252", "#000000")
cbPalette <- c("#C69472", "#8A8FA1", "#29303B", "#0057AD", "#C70C0B")
# Plot it
ggplot(temp, aes(x = `n`, y = power , color = group, linetype = group))+
geom_line(size=1) +
#geom_hline(yintercept = 0.80, linetype = 3, color="gray", size=1)+
theme_minimal() +
#theme_cowplot()+
geom_label_repel(data = temp %>% filter(`n` == 50),
aes(label = group, fill=group),
#hjust = -1.0,
vjust = 1.5,
size = 3,
color="white")+
ylab("Statistische Power")+
xlab("Fallzahl")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12),
legend.text=element_text(size=12))+
scale_color_manual(values=cbPalette)+
scale_fill_manual(values = cbPalette)+
theme(legend.position="none",
#legend.direction="horizontal",
legend.title = element_blank())
knitr::opts_chunk$set(echo = TRUE)
library(GGally)
library(ggplot2)
library(tidyverse)
library(viridis)
#To get nice numbers for the pdf
knitr::opts_chunk$set(
fig.process = function(filename) {
new_filename <- stringr::str_remove(string = filename,
pattern = "-1")
fs::file_move(path = filename, new_path = new_filename)
ifelse(fs::file_exists(new_filename), new_filename, filename)
}
)
#use one theme in the book
theme_set(theme_minimal()) # sets a default ggplot theme
knitr::opts_chunk$set(fig.width=6, fig.height=4, fig.path='images/', cache = TRUE,
echo=TRUE, warning=FALSE, message=FALSE, eval=TRUE)
#Data section
df <- as.data.frame(mtcars)
df
#Scatterplots
x <- mtcars$hp
y <- mtcars$mpg
library(HistData)
data(Galton)
# Create data
set.seed(1)
a <- data.frame(x = 5 + rnorm(100), y = 5 + rnorm(100)) %>% mutate(y = y-x/4)
c <- a %>% mutate(x=x+2) %>% mutate(y=y+2)
data <- do.call(rbind, list(a,c))
data <- data %>% mutate(Sex=rep(c("Men", "Women"), each=100))
library(pwr) # for power calcs
library(tidyr) # for data manipulation
library(ggrepel)
library(ggplot2)
library(cowplot)
library(tidyverse)
#Calculate Power for t-est depending on n#############################
ptab <- cbind(NULL, NULL)
for (i in seq(2,500)){
pwrt1 <-  pwr.t.test(d=0.1, sig.level=0.05, power=NULL, n=i,
type = "two.sample", alternative = "two.sided")
pwrt2 <- pwr.t.test(d=0.2, sig.level=0.05, power=NULL, n=i,
type = "two.sample", alternative = "two.sided")
pwrt3 <- pwr.t.test(d=0.3, sig.level=0.05, power=NULL, n=i,
type = "two.sample", alternative = "two.sided")
pwrt4 <- pwr.t.test(d=0.5, sig.level=0.05, power=NULL, n=i,
type = "two.sample", alternative = "two.sided")
pwrt5 <- pwr.t.test(d=0.7, sig.level=0.05, power=NULL, n=i,
type = "two.sample", alternative = "two.sided")
ptab <- rbind(ptab, cbind(pwrt1$power, pwrt1$n,
pwrt2$power, pwrt2$n,
pwrt3$power, pwrt3$n,
pwrt4$power, pwrt4$n,
pwrt5$power, pwrt5$n))
}
ptab <- cbind(seq_len(nrow(ptab)), ptab)
colnames(ptab) <- c("id","d = 0,1.power","d = 0,1.n",
"d = 0,2.power","d = 0,2.n",
"d = 0,3.power","d = 0,3.n",
"d = 0,5.power","d = 0,5.n",
"d = 0,7.power","d = 0,7.n")
# get data into right format for ggplot2
temp <- ptab %>%
as.data.frame() %>%
gather(key = name, value = val, 2:11) %>%
separate(col = name, into = c("group", "var"), sep = "\\.") %>%
spread(key = var, value = val)
# factor group
temp$group <- factor(temp$group,
levels = c("d = 0,1", "d = 0,2",
"d = 0,3", "d = 0,5",
"d = 0,7"))
#Color Scheme
cbPalette <- c("#bdbdbd","#969696","#737373", "#525252", "#000000")
cbPalette <- c("#C69472", "#8A8FA1", "#29303B", "#0057AD", "#C70C0B")
# Plot it
ggplot(temp, aes(x = `n`, y = power , color = group, linetype = group))+
geom_line(size=1) +
#geom_hline(yintercept = 0.80, linetype = 3, color="gray", size=1)+
theme_minimal() +
#theme_cowplot()+
geom_label_repel(data = temp %>% filter(`n` == 50),
aes(label = group, fill=group),
#hjust = -1.0,
vjust = 1.5,
size = 3,
color="white")+
ylab("Power")+
xlab("N")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12),
legend.text=element_text(size=12))+
scale_color_manual(values=cbPalette)+
scale_fill_manual(values = cbPalette)+
theme(legend.position="none",
#legend.direction="horizontal",
legend.title = element_blank())
library(pwr) # for power calcs
pwr.t.test(d=0.5,
sig.level=0.05,
power=0.8,
n=i,
type = "two.sample",
alternative = "two.sided")
library(pwr) # for power calcs
pwr.t.test(d=0.5,
sig.level=0.05,
power=0.8,
n=0,
type = "two.sample",
alternative = "two.sided")
library(pwr) # for power calcs
pwr.t.test(d=0.5,
sig.level=0.05,
power=0.8,
n=NULL,
type = "two.sample",
alternative = "two.sided")
ggplot(temp, aes(x = `n`, y = power , color = group, linetype = group))+
geom_line(size=1) +
#geom_hline(yintercept = 0.80, linetype = 3, color="gray", size=1)+
theme_minimal() +
#theme_cowplot()+
geom_label_repel(data = temp %>% filter(`n` == 50),
aes(label = group, fill=group),
#hjust = -1.0,
vjust = 0,
size = 3,
color="white")+
ylab("Statistische Power")+
xlab("Fallzahl")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12),
legend.text=element_text(size=12))+
scale_color_manual(values=cbPalette)+
scale_fill_manual(values = cbPalette)+
theme(legend.position="none",
#legend.direction="horizontal",
legend.title = element_blank())
library(pwr) # for power calcs
library(tidyr) # for data manipulation
library(ggrepel)
library(ggplot2)
library(cowplot)
library(tidyverse)
#Calculate Power for t-est depending on n#############################
ptab <- cbind(NULL, NULL)
for (i in seq(2,500)){
pwrt1 <-  pwr.t.test(d=0.1, sig.level=0.05, power=NULL, n=i,
type = "two.sample", alternative = "two.sided")
pwrt2 <- pwr.t.test(d=0.2, sig.level=0.05, power=NULL, n=i,
type = "two.sample", alternative = "two.sided")
pwrt3 <- pwr.t.test(d=0.3, sig.level=0.05, power=NULL, n=i,
type = "two.sample", alternative = "two.sided")
pwrt4 <- pwr.t.test(d=0.5, sig.level=0.05, power=NULL, n=i,
type = "two.sample", alternative = "two.sided")
pwrt5 <- pwr.t.test(d=0.7, sig.level=0.05, power=NULL, n=i,
type = "two.sample", alternative = "two.sided")
ptab <- rbind(ptab, cbind(pwrt1$power, pwrt1$n,
pwrt2$power, pwrt2$n,
pwrt3$power, pwrt3$n,
pwrt4$power, pwrt4$n,
pwrt5$power, pwrt5$n))
}
ptab <- cbind(seq_len(nrow(ptab)), ptab)
colnames(ptab) <- c("id","d = 0,1.power","d = 0,1.n",
"d = 0,2.power","d = 0,2.n",
"d = 0,3.power","d = 0,3.n",
"d = 0,5.power","d = 0,5.n",
"d = 0,7.power","d = 0,7.n")
# get data into right format for ggplot2
temp <- ptab %>%
as.data.frame() %>%
gather(key = name, value = val, 2:11) %>%
separate(col = name, into = c("group", "var"), sep = "\\.") %>%
spread(key = var, value = val)
# factor group
temp$group <- factor(temp$group,
levels = c("d = 0,1", "d = 0,2",
"d = 0,3", "d = 0,5",
"d = 0,7"))
#Color Scheme
cbPalette <- c("#bdbdbd","#969696","#737373", "#525252", "#000000")
cbPalette <- c("#C69472", "#8A8FA1", "#29303B", "#0057AD", "#C70C0B")
ggplot(temp, aes(x = `n`, y = power , color = group, linetype = group))+
geom_line(size=1) +
#geom_hline(yintercept = 0.80, linetype = 3, color="gray", size=1)+
theme_minimal() +
#theme_cowplot()+
geom_label_repel(data = temp %>% filter(`n` == 50),
aes(label = group, fill=group),
#hjust = -1.0,
vjust = 0,
size = 3,
color="white")+
ylab("Statistische Power")+
xlab("Fallzahl")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12),
legend.text=element_text(size=12))+
scale_color_manual(values=cbPalette)+
scale_fill_manual(values = cbPalette)+
theme(legend.position="none",
#legend.direction="horizontal",
legend.title = element_blank())
ggplot(temp, aes(x = `n`, y = power , color = group, linetype = group))+
geom_line(size=1) +
#geom_hline(yintercept = 0.80, linetype = 3, color="gray", size=1)+
theme_minimal() +
#theme_cowplot()+
geom_label(data = temp %>% filter(`n` == 50),
aes(label = group, fill=group),
#hjust = -1.0,
vjust = 0,
size = 3,
color="white")+
ylab("Statistische Power")+
xlab("Fallzahl")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12),
legend.text=element_text(size=12))+
scale_color_manual(values=cbPalette)+
scale_fill_manual(values = cbPalette)+
theme(legend.position="none",
#legend.direction="horizontal",
legend.title = element_blank())
library(pwr) # for power calcs
library(tidyr) # for data manipulation
library(ggrepel)
library(ggplot2)
library(cowplot)
library(tidyverse)
#Calculate Power for t-est depending on n#############################
ptab <- cbind(NULL, NULL)
for (i in seq(2,500)){
pwrt1 <-  pwr.t.test(d=0.1, sig.level=0.05, power=NULL, n=i,
type = "two.sample", alternative = "two.sided")
pwrt2 <- pwr.t.test(d=0.2, sig.level=0.05, power=NULL, n=i,
type = "two.sample", alternative = "two.sided")
pwrt3 <- pwr.t.test(d=0.3, sig.level=0.05, power=NULL, n=i,
type = "two.sample", alternative = "two.sided")
pwrt4 <- pwr.t.test(d=0.5, sig.level=0.05, power=NULL, n=i,
type = "two.sample", alternative = "two.sided")
pwrt5 <- pwr.t.test(d=0.7, sig.level=0.05, power=NULL, n=i,
type = "two.sample", alternative = "two.sided")
ptab <- rbind(ptab, cbind(pwrt1$power, pwrt1$n,
pwrt2$power, pwrt2$n,
pwrt3$power, pwrt3$n,
pwrt4$power, pwrt4$n,
pwrt5$power, pwrt5$n))
}
ptab <- cbind(seq_len(nrow(ptab)), ptab)
colnames(ptab) <- c("id","d = 0,1.power","d = 0,1.n",
"d = 0,2.power","d = 0,2.n",
"d = 0,3.power","d = 0,3.n",
"d = 0,5.power","d = 0,5.n",
"d = 0,7.power","d = 0,7.n")
# get data into right format for ggplot2
temp <- ptab %>%
as.data.frame() %>%
gather(key = name, value = val, 2:11) %>%
separate(col = name, into = c("group", "var"), sep = "\\.") %>%
spread(key = var, value = val)
# factor group
temp$group <- factor(temp$group,
levels = c("d = 0,1", "d = 0,2",
"d = 0,3", "d = 0,5",
"d = 0,7"))
#Color Scheme
cbPalette <- c("#bdbdbd","#969696","#737373", "#525252", "#000000")
cbPalette <- c("#C69472", "#8A8FA1", "#29303B", "#0057AD", "#C70C0B")
ggplot(temp, aes(x = `n`, y = power , color = group, linetype = group))+
geom_line(size=1) +
#geom_hline(yintercept = 0.80, linetype = 3, color="gray", size=1)+
theme_minimal() +
#theme_cowplot()+
geom_label(data = temp %>% filter(`n` == 50),
aes(label = group, fill=group),
#hjust = -1.0,
vjust = 0,
size = 3,
color="white")+
ylab("Statistische Power")+
xlab("Fallzahl")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12),
legend.text=element_text(size=12))+
scale_color_manual(values=cbPalette)+
scale_fill_manual(values = cbPalette)+
theme(legend.position="none",
#legend.direction="horizontal",
legend.title = element_blank())
library(pwr) # for power calcs
library(tidyr) # for data manipulation
library(ggrepel)
library(ggplot2)
library(cowplot)
library(tidyverse)
#Calculate Power for t-est depending on n#############################
ptab <- cbind(NULL, NULL)
for (i in seq(2,500)){
pwrt1 <-  pwr.t.test(d=0.1, sig.level=0.05, power=NULL, n=i,
type = "two.sample", alternative = "two.sided")
pwrt2 <- pwr.t.test(d=0.2, sig.level=0.05, power=NULL, n=i,
type = "two.sample", alternative = "two.sided")
pwrt3 <- pwr.t.test(d=0.3, sig.level=0.05, power=NULL, n=i,
type = "two.sample", alternative = "two.sided")
pwrt4 <- pwr.t.test(d=0.5, sig.level=0.05, power=NULL, n=i,
type = "two.sample", alternative = "two.sided")
pwrt5 <- pwr.t.test(d=0.7, sig.level=0.05, power=NULL, n=i,
type = "two.sample", alternative = "two.sided")
ptab <- rbind(ptab, cbind(pwrt1$power, pwrt1$n,
pwrt2$power, pwrt2$n,
pwrt3$power, pwrt3$n,
pwrt4$power, pwrt4$n,
pwrt5$power, pwrt5$n))
}
ptab <- cbind(seq_len(nrow(ptab)), ptab)
colnames(ptab) <- c("id","d = 0,1.power","d = 0,1.n",
"d = 0,2.power","d = 0,2.n",
"d = 0,3.power","d = 0,3.n",
"d = 0,5.power","d = 0,5.n",
"d = 0,7.power","d = 0,7.n")
# get data into right format for ggplot2
temp <- ptab %>%
as.data.frame() %>%
gather(key = name, value = val, 2:11) %>%
separate(col = name, into = c("group", "var"), sep = "\\.") %>%
spread(key = var, value = val)
# factor group
temp$group <- factor(temp$group,
levels = c("d = 0,1", "d = 0,2",
"d = 0,3", "d = 0,5",
"d = 0,7"))
#Color Scheme
cbPalette <- c("#bdbdbd","#969696","#737373", "#525252", "#000000")
cbPalette <- c("#C69472", "#8A8FA1", "#29303B", "#0057AD", "#C70C0B")
ggplot(temp, aes(x = `n`, y = power , color = group, linetype = group))+
geom_line(size=1) +
#geom_hline(yintercept = 0.80, linetype = 3, color="gray", size=1)+
theme_minimal() +
#theme_cowplot()+
geom_label(data = temp %>% filter(`n` == 50),
aes(label = group, fill=group),
#hjust = -1.0,
vjust = 0,
size = 3,
color="white")+
ylab("Statistische Power")+
xlab("Fallzahl")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12),
legend.text=element_text(size=12))+
scale_color_manual(values=cbPalette)+
scale_fill_manual(values = cbPalette)+
theme(legend.position="none",
#legend.direction="horizontal",
legend.title = element_blank())
setwd("C:/Users/gu99mywo/Dropbox/Lehre/Bildung/Vorlesung Bildung EF/SoSe2021/Folien/10_QuizX")
pagedown::chrome_print("10_EBF.html")
#Practice R Sticker
library(readr)
library(tidyverse)
library(ggbeeswarm)
library(ggplot2)
library(ggrepel)
library(hexSticker)
library(showtext)
climate_data <- read_csv("C:/Users/gu99mywo/Dropbox/R in Practice/Book/Chapters_R/07_Visualise_Findings/01_Visualize_Findings/data/GISTEMP_v4.csv")
climate_data <- select(climate_data, Year:Dec)
data_long <- gather(climate_data, month, temperature, Jan:Dec, factor_key=TRUE)
data_long
p <- ggplot(data_long, aes(x=Year, y=temperature, color = temperature, size = abs(temperature))) +
geom_quasirandom()+
scale_size_continuous(range = c(0.2, 3))+
scale_color_gradient2(low = "#034e7b", mid = "#f0f0f0",  high = "#e34a33")+
scale_y_continuous(breaks = seq(-1, 1.2, by = 0.2))+
scale_x_continuous(breaks = seq(1880, 2020, by = 10))+
theme_void() +
theme_transparent()+
theme(legend.position="none")
## Loading Google fonts (http://www.google.com/fonts)
font_add_google("B612", "B612")
## Automatically use showtext to render text for future devices
showtext_auto()
s<- sticker(p, package="Practice R", p_size=18,  p_y = 1.4,  s_x=1, s_y=.9, s_width=1.83, s_height = 0.9,
h_fill="white", h_color="#E3E3E3", p_family = "B612", p_color = "black")
s
s<- sticker(package="", p_size=18,  p_y = 1.4,  s_x=1, s_y=.9, s_width=1.83, s_height = 0.9,
h_fill="white", h_color="#E3E3E3", p_family = "B612", p_color = "black")
s
